<!--L65c1 Colocamos a Logica dos paginadores nunha vista parcial -->

@* L65c2 Todo empeza recibindo unha clase chamada BaseModelo *@
@model BaseModelo 


@*L65c9a Pasamos a mostrar a funcionalidad*@

@{
    //L65c9b calculamos a cantidad total de paginas
    var cantidadPaginas = (int)Math.Ceiling((double)Model.TotalDeRegistros / Model.RegistrosPorPagina);
}

<!--L65c9c Funcionalidad: Anterior y siguiente-->

<ul class="pagination">
    @if (Model.PaginaActual == 1)
    {
        Model.ValoresQueryString["pagina"] = 1;
        /*AtionLink mostra un hipervinculo
         *                                      texto   ,actionName a nulo: o deixamos a nulo porq mvc utilizará o action no que estamos e asi podemos usalo generico para calquer pagina 
                                                                ,texto adicional o poñer encima o raton mostrando a ruta a que vai ir
         * */  
        <li class="disabled">@Html.ActionLink("Anterior", null,Model.ValoresQueryString)</li>//se estamos na primeira pagina disable
    }
    else
    {
        Model.ValoresQueryString["pagina"] = Model.PaginaActual - 1;
        <li>@Html.ActionLink("Anterior", null, Model.ValoresQueryString)</li>
    }

    @if (Model.PaginaActual == cantidadPaginas)//se estamos na ultima pagina disable
    {
        Model.ValoresQueryString["pagina"] = cantidadPaginas;
        <li class="disabled">@Html.ActionLink("Siguiente", null, Model.ValoresQueryString)</li>
    }
    else
    {
        Model.ValoresQueryString["pagina"] = Model.PaginaActual + 1;
        <li>@Html.ActionLink("Siguiente", null, Model.ValoresQueryString)</li>
    }
</ul>

<!-- L65c10a Funcionalidad: Páginas-->

@{
    int Inicial = 1;
    var radio = 2;//distancia entre o centro e o estremo (establece o numero de enlaces que veremos)
    var cantidadMaximaDePaginas = radio * 2 + 1;
    int Final = (cantidadPaginas > cantidadMaximaDePaginas) ? cantidadMaximaDePaginas : cantidadPaginas;
    if (Model.PaginaActual > radio + 1)
    {
        Inicial = Model.PaginaActual - radio;
        if (cantidadPaginas > Model.PaginaActual + radio)
        {
            Final = Model.PaginaActual + radio;
        }
        else
        {
            Final = cantidadPaginas;
        }
    }
}


<ul class="pagination">
    @{Model.ValoresQueryString["pagina"] = 1; }
    <li>@Html.ActionLink("Primera", null, Model.ValoresQueryString)</li>
    @for (int i = Inicial; i <= Final; i++) //Poñeremos tantos links como necesitemos
    {
    Model.ValoresQueryString["pagina"] = i;
    if (i == Model.PaginaActual)
    {
    <li class="active">@Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)</li>
    }
    else
    {
    <li>
        @Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)
    </li>
    }
    }
    @{Model.ValoresQueryString["pagina"] = cantidadPaginas; }
<li>@Html.ActionLink("Ultima", null, Model.ValoresQueryString)</li>
</ul>
