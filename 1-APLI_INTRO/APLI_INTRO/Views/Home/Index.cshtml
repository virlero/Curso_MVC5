@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>

<hr />
<h4>L17ca Ejemplo de ActionLink</h4>
<div>@Html.ActionLink("Descargar txt", "Retornotxt", "RetornoArchivo")</div>
<div>@Html.ActionLink("Mi about", "About") </div>@*se estamos queremos dirigirnos a unha accion do mesmo controlador, nn fai falla poñer o controlador.*@
<hr />
<h5>L17c2b htmlAttributes dentro de ActionLink</h5>
@* instanciamos os novos atributos, podemos poñerlle unha clase boostrap,enviar variables*@
<div>@Html.ActionLink("Mi about-falla porque pasamos un null i é obligario pasar num", "About", null, new { miAtributo = "valor atributo 1", @class = "btn btn-warning" })</div>
<br />
<div>@Html.ActionLink("Enlace a mi about enviando variable num", "About", new { num = 87 }, new { miAtributo = "valor atributo 1", @class = "btn btn-default" })</div>
<br />
<div>@Html.ActionLink("Enlace a contacto enviando edad", "Contact", new { edad = 93 }, new { miAtributo = "valor atributo 2", @class = "btn btn-default" })</div>

<br /><br /><hr />
<div><stron>L21c1c DropDownList</stron> menu desplegable que permite ao usuario escoller unha de varia opcions </div>
@{

}
<br />
<label>Escoja una opción:</label>
@*Se o poñemos asi:@Html.DropDownList("miDropDownList",ViewBag.Milistado) non recoñece a variable Mi listado.
    Polo que hay que indicarlle que é un lista:
*@
@Html.DropDownList("miDropDownList", (List<SelectListItem>)ViewBag.Milistado)
<br /><br /><hr />
------------------------------------------------------------------L21c1
<div><stron>L22c1b DropDownList</stron> menu desplegable que permite ao usuario escoller unha de varia opcions </div>
@{

}
<br />
<label>Escoja una opción:</label>
@*Si tivesemos un modelo seria moi facil porque podríamos usar:
    @Html.EnumDropDownListFor(), como nn e un modelo facelo asi:*@
@Html.DropDownList("miDropDownList2", (List<SelectListItem>)ViewBag.MilistadoEnum)
<br /><br /><hr />
------------------------------------------------------------------L22c1b